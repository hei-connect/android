buildscript {
    repositories {
        maven { url 'http://download.crashlytics.com/maven' }
    }

    dependencies {
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'crashlytics'
apply plugin: 'newrelic'

android {
    compileSdkVersion 19
    buildToolsVersion "20.0.0"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 19
        versionCode 10000
        versionName "1.0"
        applicationId "eu.heiconnect.android"
        testApplicationId "eu.heiconnect.android.test"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
    }
    signingConfigs {
        debug
        release
    }
    buildTypes {
        debug {
            buildConfigField 'String', 'API_URL_BASE', "\"http://10.0.3.2:3000/\""
            buildConfigField 'String', 'API_URL_PATH', "\"api/v1/\""
            buildConfigField 'String', 'NEWRELIC_KEY', "\"AA41630c18fd5b723beb00e894e944f54b33542169\""

            signingConfig signingConfigs.debug
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
            debuggable true
        }
        staging {
            buildConfigField 'String', 'API_URL_BASE', "\"http://www.hei-connect.eu/\""
            buildConfigField 'String', 'API_URL_PATH', "\"api/v1/\""
            buildConfigField 'String', 'NEWRELIC_KEY', "\"AA41630c18fd5b723beb00e894e944f54b33542169\""

            signingConfig signingConfigs.debug
            applicationIdSuffix '.staging'
            versionNameSuffix '-STAGING'
            debuggable true
        }
        release {
            buildConfigField 'String', 'API_URL_BASE', "\"http://www.hei-connect.eu/\""
            buildConfigField 'String', 'API_URL_PATH', "\"api/v1/\""
            buildConfigField 'String', 'NEWRELIC_KEY', "\"AA41630c18fd5b723beb00e894e944f54b33542169\""

            signingConfig signingConfigs.release

            debuggable false
            runProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
    sourceSets {
        instrumentTest.setRoot('src/test')
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
}

dependencies {
    compile 'com.mcxiaoke.volley:library:1.0.6@aar'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.3.1'

    compile 'com.android.support:support-v13:20.0.0'
    compile ("com.astuetz:pagerslidingtabstrip:1.0.1") {
        exclude group: 'com.android.support', module: 'support-v4'
    }
    compile 'com.nhaarman.listviewanimations:library:2.6.0'

    compile 'com.crashlytics.android:crashlytics:1.+'
    compile 'com.newrelic.agent.android:android-agent:3.+'
    compile 'com.google.android.gms:play-services:5.0.77'

    compile fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
}

// Read the release signing options from file
def signingProps = new Properties()
signingProps.load(new FileInputStream(rootProject.file("release.properties")))
android.signingConfigs.release.storeFile rootProject.file(signingProps.keyStore)
android.signingConfigs.release.storePassword signingProps.keyStorePassword
android.signingConfigs.release.keyAlias signingProps.keyAlias
android.signingConfigs.release.keyPassword signingProps.keyAliasPassword
